{
	// Place your atcoder workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"prj": {
		"scope": "cpp",
		"prefix": "prj",
		"body": [
			"#include<bits/stdc++.h>",
			"#define REP(i,n) for(int i = 0; i < (n); ++i)";
			"using namespace std;",
			"typedef long long int ll;",
			"const ll MOD = 1000000007;",
			"",
			"int main() {",
			"  $1",
			"  return 0;",
			"}"
		],
		"description": "テンプレ"
	},
	"gcd": {
		"scope": "cpp",
		"prefix": "gcd",
		"body": [
			"int gcd(int a, int b) {",
			"  return b ? gcd(b, a % b) : a;",
			"}"
		],
		"description": "最大公約数"
	},
	"lcm": {
		"scope": "cpp",
		"prefix": "lcm",
		"body": [
			"int lcm(int a, int b) {",
			"  return a / gcd(a, b) * b;",
			"}"
		],
		"description": "最小公倍数"
	},
	"isPrime": {
		"scope": "cpp",
		"prefix": "isPrime",
		"body": [
			"bool isPrime(int x) {",
			"  int i;",
			"  if (x < 2) return 0;",
			"  else if (x == 2) return 1;",
			"  if (x%2 == 0) return 0;",
			"  for(i = 3; i*i <= x; i += 2) if (x%i == 0) return 0;",
			"  return 1;",
			"}"
		],
		"description": "素数判定"
	},
	"digsum": {
		"scope": "cpp",
		"prefix": "digsum",
		"body": [
			"int digsum(int n) {",
			"  int res = 0;",
			"  while(n > 0) {",
			"    res += n%10;",
			"    n /= 10;",
			"  }",
			"  return res;",
      "}"
		],
		"description": "桁数"
	},
	"enumDiv": {
		"scope": "cpp",
		"prefix": "enumDiv",
		"body": [
			"vector<int> enumDiv(int n) {",
			"  vector<int> ret;",
			"  for(int i = 1 ; i*i <= n ; ++i) {",
			"    if (n%i == 0) {",
			"      ret.push_back(i);",
			"      if (i != 1 && i*i != n) {",
			"        ret.push_back(n / i);",
			"      }",
			"    }",
			"  }",
			"  return ret;",
			"}"
		],
		"description": "約数"
	},
	"modPow": {
		"scope": "cpp",
		"prefix": "modPow",
		"body": [
			"long long int modPow(long long int x, long long int n, long long int mod) {",
			"  long long int res = 1;",
			"  while(n > 0) {",
			"    if (n & 1) res = res*x%mod;",
			"    x = x*x%mod;",
			"    n >>= 1;",
			"  }",
			"  return res;",
			"}"
		],
		"description": "累乗"
	},
	"countStr": {
		"scope": "cpp",
		"prefix": "countStr",
		"body": [
			"int stringcount(string s, char c) {",
			"  return count(s.cbegin(), s.cend(), c);",
			"}"
		],
		"description": "文字列カウント"
	},
}